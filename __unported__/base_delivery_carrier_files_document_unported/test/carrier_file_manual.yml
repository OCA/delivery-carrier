-
  In order to test Carrier file generation in a document directory
-
  I set the system tempfile on the carrier file configuration to be sure the path will be writable
-
  !python {model: delivery.carrier.file}: |
    import tempfile
    delivery_carrier_file = self.browse(cr, uid, ref("base_delivery_carrier_files.delivery_carrier_file_manual"))
    self.write(cr, uid, delivery_carrier_file.id, {'document_directory_id': ref('document.dir_root'), 'write_mode': 'document'})
-
  I set the carrier file configuration on the carrier Free delivery charges
-
  !record {model: delivery.carrier, id: delivery.free_delivery_carrier}:
    carrier_file_id: base_delivery_carrier_files.delivery_carrier_file_manual
-
  I confirm outgoing shipment of 130 kgm Ice-cream.
-
  !workflow {model: stock.picking, action: button_confirm, ref: base_delivery_carrier_files.outgoing_shipment_carrier_file_manual}
-
  I check outgoing shipment after stock availablity in refrigerator.
-
  !python {model: stock.picking}: |
    self.force_assign(cr, uid, [ref("base_delivery_carrier_files.outgoing_shipment_carrier_file_manual")])
    picking = self.browse(cr, uid, ref("base_delivery_carrier_files.outgoing_shipment_carrier_file_manual"))
-
  I deliver outgoing shipment.
-
  !python {model: stock.partial.picking}: |
    context.update({'active_model': 'stock.picking.out', 'active_id': ref('base_delivery_carrier_files.outgoing_shipment_carrier_file_manual'), 'active_ids': [ref('base_delivery_carrier_files.outgoing_shipment_carrier_file_manual')]})
-
  !record {model: stock.partial.picking, id: partial_outgoing}:
    picking_id: base_delivery_carrier_files.outgoing_shipment_carrier_file_manual
-
  !python {model: stock.partial.picking }: |
    self.do_partial(cr, uid, [ref('partial_outgoing')], context=context)
-
  I check shipment details after shipment, the carrier file must not have been generated
-
  !assert {model: stock.picking.out, id: base_delivery_carrier_files.outgoing_shipment_carrier_file_manual, string: Carrier file should be generated}:
    - carrier_file_generated is False
-
  I generate the carrier files of my shipment from the wizard
-
  !python {model: delivery.carrier.file.generate}: |
    wizard_id = self.create(cr, uid, {}, {'active_ids': [ref('base_delivery_carrier_files.outgoing_shipment_carrier_file_manual')], 'active_model': 'stock.picking.out'})
    self.action_generate(cr, uid, [wizard_id], {'active_ids': [ref('base_delivery_carrier_files.outgoing_shipment_carrier_file_manual')]})
-
  I check shipment details after manual generation, the carrier file must have been generated
-
  !assert {model: stock.picking.out, id: base_delivery_carrier_files.outgoing_shipment_carrier_file_manual, string: Carrier file should be generated}:
    - carrier_file_generated == True
