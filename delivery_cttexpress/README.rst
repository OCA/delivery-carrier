====================
Delivery CTT Express
====================

.. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! This file is generated by oca-gen-addon-readme !!
   !! changes will be overwritten.                   !!
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png
    :target: https://odoo-community.org/page/development-status
    :alt: Beta
.. |badge2| image:: https://img.shields.io/badge/licence-AGPL--3-blue.png
    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html
    :alt: License: AGPL-3
.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Fdelivery--carrier-lightgray.png?logo=github
    :target: https://github.com/OCA/delivery-carrier/tree/16.0/delivery_cttexpress
    :alt: OCA/delivery-carrier
.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png
    :target: https://translation.odoo-community.org/projects/delivery-carrier-16-0/delivery-carrier-16-0-delivery_cttexpress
    :alt: Translate me on Weblate
.. |badge5| image:: https://img.shields.io/badge/runbot-Try%20me-875A7B.png
    :target: https://runbot.odoo-community.org/runbot/99/16.0
    :alt: Try me on Runbot

|badge1| |badge2| |badge3| |badge4| |badge5| 

CTT Express Iberic Web Services API intration with Odoo. Valid for Portugal and Spain.

**Table of contents**

.. contents::
   :local:

Installation
============

This module needs the `zeep` python library. It depends on the modules
`delivery_package_number`, `delivery_price_method` and `delivery_state` that can be
found on OCA/delivery-carrier.

The following ports and hosts should be visible from your Odoo deployment:

- Test: iberws.tourlineexpress.com:8686
- Production: iberws.tourlineexpress.com:8700

Configuration
=============

CTT Express Iberic Web Services API doesn't provide shipping price calculation methods.
So you'll have to rely on Odoo standard methods selecting them in the field
*Price method*.

To configure your CTT Express services, go to:

#. *Inventory/Sales > Configuration > Delivery methods* and create a new one.
#. Choose *CTT Express* as provider.
#. Configure your CTT credentials: contract, agency, customer code, user and password.
#. Configure your label format:

   - Single: Thermal printer (single label).
   - MULTI1: One label per sheet.
   - MULTI3: Protrait 3 labels per sheet.
   - MULTI4: Landscape 4 labels per sheet.
#. You can also can configure your printer offset.
#. Choose you shipping service.

If you wish to configure several services with the same credentials, duplicate the first
you made and change the service in the copy.

Usage
=====

The shipping codes are generated when a stock picking which carrier is configured
for CTT Express as a provider is validated. The label is generated and attached to
the document according to the label generation parameters configured before.

In case you accidentally delete the label attachment, you can generate it again clicking
on the *CTT Express Label* button on the top of the picking form.

As usual, to cancel the shipping, go to the *Additional Information* tab and click on
the *Cancel delivery* action next to the *Shipping code* field.

To print the shippings manifest between dates, go to:

#. *Inventory > Reports > CTT Express Manifest*
#. In the wizard we can configure the document format (Excel or PDF) and the date to
   comprehend.
#. We can filter delivery methods as well in case we handle different CTT accounts.
#. Click on *Get Manifest* to gather the requested files.

To make an scheduled shippings pickup request:

#. Go to the shipping method for which account we want to schedule the pickup and click
   on the *Pickup request* button.
#. In the wizard, select the date and the minimum and maximum pickup hour.
#. After clicking on the *Request pickup* button you'll get a pickup request code that
   you should keep in case there's any issue with it.

Known issues / Roadmap
======================

* The module implements the *Iberic Web Services* API. Its services are restricted
  to Spain and Portugal (and Andorra but only as destination). In future API updates
  extra countries and extra developments could be needed.

Bug Tracker
===========

Bugs are tracked on `GitHub Issues <https://github.com/OCA/delivery-carrier/issues>`_.
In case of trouble, please check there if your issue has already been reported.
If you spotted it first, help us smashing it by providing a detailed and welcomed
`feedback <https://github.com/OCA/delivery-carrier/issues/new?body=module:%20delivery_cttexpress%0Aversion:%2016.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.

Do not contact contributors directly about support or help with technical issues.

Credits
=======

Authors
~~~~~~~

* Tecnativa

Contributors
~~~~~~~~~~~~

* `Tecnativa <https://www.tecnativa.com>`_:

  * David Vidal

Other credits
~~~~~~~~~~~~~

The development of this module has been financially supported by:

* `CTT Express <https://www.cttexpress.com/>`_:

Maintainers
~~~~~~~~~~~

This module is maintained by the OCA.

.. image:: https://odoo-community.org/logo.png
   :alt: Odoo Community Association
   :target: https://odoo-community.org

OCA, or the Odoo Community Association, is a nonprofit organization whose
mission is to support the collaborative development of Odoo features and
promote its widespread use.

This module is part of the `OCA/delivery-carrier <https://github.com/OCA/delivery-carrier/tree/16.0/delivery_cttexpress>`_ project on GitHub.

You are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.
