==========================
Delivery Carrier Label GLS
==========================

.. 
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! This file is generated by oca-gen-addon-readme !!
   !! changes will be overwritten.                   !!
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! source digest: sha256:06fda2250228b5c5afd09c2a72b1045f9a0c3d98a770787b50dbc78bb50d9ba7
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png
    :target: https://odoo-community.org/page/development-status
    :alt: Beta
.. |badge2| image:: https://img.shields.io/badge/licence-AGPL--3-blue.png
    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html
    :alt: License: AGPL-3
.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Fdelivery--carrier-lightgray.png?logo=github
    :target: https://github.com/OCA/delivery-carrier/tree/16.0/delivery_carrier_label_gls
    :alt: OCA/delivery-carrier
.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png
    :target: https://translation.odoo-community.org/projects/delivery-carrier-16-0/delivery-carrier-16-0-delivery_carrier_label_gls
    :alt: Translate me on Weblate
.. |badge5| image:: https://img.shields.io/badge/runboat-Try%20me-875A7B.png
    :target: https://runboat.odoo-community.org/builds?repo=OCA/delivery-carrier&target_branch=16.0
    :alt: Try me on Runboat

|badge1| |badge2| |badge3| |badge4| |badge5|

Integration with GLS shipping webservices.
Documentation:
http://gls-shipit.gls-group.eu/webservices/2_8_11/doxygen/WS-REST-API/index.html

**Table of contents**

.. contents::
   :local:

Configuration
=============

To start using GLS, you need to configure two types of settings in
*Inventory - Configuration- Delivery* or *Inventory - Configuration - Settings*
which leads to the right section in inventory global settings.
First you have the *Carrier Account* where you find account number
and password then you also have *Shipping Methods* with other GLS
parameters to configure such as contact ID, urls and return address.
These 2 types of settings use **"GLS"** as delivery type.
The contact ID corresponds to the sender which needs to be a contact in the
GLS database. This determines the default return address, as well as the billing.
You can also configure the tracking url that is used for each carrier.

For client integration tests you need to fill your credentials in the tests/common.py.

Usage
=====

Create the packages on GLS which returns a tracking ID.
If there is any kind of mistake (address, weight),
it is possible to cancel it as long as it has not been scanned yet.
If the package is not cancelled, it is invoiced even if it never ships.

When sending a picking, all products should be put in one or multiple packages.
These packages need to have a GLS packaging either Parcel, Express, or Freight.
These are already pre-configured in the module data.

The end of day report should be printed when the delivery takes place.
At the last resort, this function should be called at the end of the day.
If it had already run, it would have no impact.
In case the delivery is delayed, the report should simply be kept for the
next day, and provided with the next report if there is one.

Bug Tracker
===========

Bugs are tracked on `GitHub Issues <https://github.com/OCA/delivery-carrier/issues>`_.
In case of trouble, please check there if your issue has already been reported.
If you spotted it first, help us to smash it by providing a detailed and welcomed
`feedback <https://github.com/OCA/delivery-carrier/issues/new?body=module:%20delivery_carrier_label_gls%0Aversion:%2016.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.

Do not contact contributors directly about support or help with technical issues.

Credits
=======

Authors
~~~~~~~

* Acsone
* Akretion

Contributors
~~~~~~~~~~~~

* David Beal @ Akretion
* Nans Lefebvre <nans.lefebvre@acsone.eu>
* Laurent Mignon <laurent.mignon@acsone.eu>
* Hughes Damry <hughes.damry@acsone.eu>

Maintainers
~~~~~~~~~~~

This module is maintained by the OCA.

.. image:: https://odoo-community.org/logo.png
   :alt: Odoo Community Association
   :target: https://odoo-community.org

OCA, or the Odoo Community Association, is a nonprofit organization whose
mission is to support the collaborative development of Odoo features and
promote its widespread use.

This module is part of the `OCA/delivery-carrier <https://github.com/OCA/delivery-carrier/tree/16.0/delivery_carrier_label_gls>`_ project on GitHub.

You are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.
